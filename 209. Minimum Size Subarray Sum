Given an array of positive integers nums and a positive integer target, return the minimal length of a subarray whose sum is
greater than or equal to target. If there is no such subarray, return 0 instead.

Example 1:
Input: target = 7, nums = [2,3,1,2,4,3]
Output: 2
Explanation: The subarray [4,3] has the minimal length under the problem constraint.

    int minSubArrayLen(int target, vector<int>& nums) {
        int n=nums.size();
        int i=0,j=0;
        int sum=0;
        int mini=1e9;
        while(j<n)
        {
         sum+=nums[j];
            if(sum<target)
                j++;
            else if(sum>=target)
            {
                while(sum>=target){ //fixed size sw but miminal length here so use while here
              mini=min(mini,j-i+1);
                sum-=nums[i];
                i++;}
                j++;
            }
        }
        if(mini==1e9)
            return 0;
        else
        return mini;
